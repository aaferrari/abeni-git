Abeni 0.0.5

Check syntax of ebuild before loading. A badly formed ebuild can cause Abeni's parser to loop forever. Example: SRC_URI="unlosed

Don't run pkg_setup when opening an ebuild if the function exists.
We run pkg_setup to get the environment

Make New Function descripts more clear i.e. 
 src_compile ./configure && make
 Also make user supported templates


---------

There are minor bugs and new features needed noted in the source code with #TODO. Mostly these are
message dialogs that need to be created for error and confirmation msgs.


Bugs:

    CRITICAL:

    Pango font errors with gtk2.
    Fix: USE='-gtk2' when compiling wxGTK and wxPython
    gtk2 is just plain terrible with wxPython as of version 2.4.1.2

    MISC:


    If opening ${PORTDIR} ebuild, copy files in ${FILESDIR} to PORTDIR_OVERLAY/${FILESDIR}

    COSMETIC:

    Watch to see if/when repoman gets patched for users so I can stop using
    my custom repoman-safe.py:
    http://bugs.gentoo.org/show_bug.cgi?id=23072
    http://forums.gentoo.org/viewtopic.php?t=59389

    Although I always set FEATURES='notitles', some escape codes are still sent in emerge:
     http://bugs.gentoo.org/show_bug.cgi?id=21430


    Order of funtions should be logical no matter the sequence created:
        src_unpack, src_compile, src_install etc.

    When you delete a notebook page, the control gets screwy looking.
        * This problem isn't resolved in wxPython 2.4.1.2. Bah.
        * Fixed, but very kludgy. I manually resize the entire app by one pixel horizontally.
        * Robin Dunn is stumped. Could be Gentoo specific due to site-wide gtkrc?


Add Features:

    Add command line options:
        * As of 0.0.5 you can abeni <filename> to load an ebuild.
          Need to add these:

        * -c, --create <src_uri>            Create ebuild using src_uri to determine package and filename
        * -e, --eclass <eclass name>        Add inherit and appropriate functions for eclass, used with --created
        * -v, --variable <x=val, y=val...>  Add variable(s) and their value(s)
        * -f, --function <func1, func2...>  Add function name(s)
        * -h, --help                        Show list of command line options
        * -b, --bump                        Bump the given ebuild up one version
        * -d, --digest                      Create digest. Used with --bump
        * -t, --category <category>         Set package category
        * -l, --license <license>           Set LICENSE
        * -i, --iuse <iuse>                 Set IUSE
        * -t, --description <description>   Set DESCRIPTION
        * -a, --homepage <homepage>         Set HOMEPAGE
        * -k, --keywords <keywords>         Set KEYWORDS
        * -o, --slot <slot>                 Set SLOT
        * -s, --s <s>                       Set S
        * -p, --pretend                     Show which package would be used with --bump, and version numbers.

        Example One:
        We have a python program that uses 'python setup.py install':

        abeni --create 'http://abeni.sf.net/foo-0.1.tgz' --eclass 'distutils' --category 'app-admin' --digest

        This would create an ebuild named foo-0.1.ebuild in PORTDIR_OVERLAY/app-admin, fetch the source code and
        create the digest, creating a complete ebuild, ready to be emerged.

        Example Two:
        We have package app-admin/cheese with cheese-0.0.1.ebuild. cheese-0.0.2.tar.gz was released today. We
        simply want to create a bumped-up version of the ebuild:

        abeni --bump app-admin/cheese --pretend
        (Output shows:)
        cheese-0.0.1.ebuild will be bumped up to cheese-0.0.2.ebuild

        This is what we want so we issue:
        abeni --bump app-admin/cheese --digest

        cheese-0.0.2.ebuild is created in PORTDIR_OVERLAY/app-admin/cheese/
        The digest is updated. cheese-0.0.2.ebuild is ready to emerge.

    Create diff of ebuild
        * Need dialog to verify 'diff file-x file-y' or let them choose.
        * As of now it diffs current ebuild vs last loaded.
        Holding off on this as some developers do not like diffs. liquidx said it was prefered.

    Eclass templates for the most common secnarios:
        * KDE, Gnome etc.
        * Done: distutils, CVS eclasses
        * Show help dialog for more difficult, such as CVS

