
Creating Ebuilds with Abeni

Naming Your Ebuild

Its important to name your ebuild correctly because key portage variables 
are assigned from it. 

Type Ctrl-n to start a new ebuild. Enter in http://www.foo.com/foo-1.0.tgz and
click Ok. Abeni will try to determine the package name (PN) and package version (PVR).
You'll notice the PN is 'foo' and the PVR is 1.0. PVR is the package version (PV)
with the possible addition of a suffix -r1 etc. Official Gentoo developers
determine when an ebuild has changed sufficiently to warrant a new -rn suffix,
so you won't need to worry about it.

PN - Package Name

The first part of your ebuild's name is PN, or package name.
The package name consists of letters and any number of dashes.
Numbers and other punctuation is not permitted. You should 
always use lowercase letters. You'll notice some packages
have uppercase, but these are being deprecated.

PV - Package Version

This is the tricky part. You must follow Gentoo's guidelines for determining
the version of the ebuild. Please see this guide for more details.

Look at the SRC_URI variable in the text editor. You'll notice it stripped
out the actual name and version number and replaced it with the variable ${P}.
This makes it easier to "bump up" a version of an ebuild. You should never
hard-code the version number in the SRC_URI.

So what if you enter a URI for a package and Abeni can't figure out the
correct PN and PVR? You'll need to manually name them and then change
the SRC_URI to use a custom variable.

Lets start another ebuild with a unconventional URI. Type Ctrl-n then click
'No' when it asks if you want to save the work. Enter this URI and click Ok:
http://www.foo.com/Foo_1.0.tbz2

Abeni can't figure what to make of that URI because of the underscore character.
The first thing we'll want to do though is enter the PN using all lowercase
letters. Type in 'foo'. For PVR, type in 1.0.

You'll notice the SRC_URI is down in the Ouput window for reference. Copy
the URI from the Outputwindow into SRC_URI and delete the part that 
is wrong: Foo_1.0 and replace it with ${MY_P}

Our job now is to create a variable that replaces the wrong parts of P
with the correct ones:

MY_P="foo${P/_/-}${PV}"

What this does 
