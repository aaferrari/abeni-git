#!/usr/bin/env python
# generated by wxGlade 0.3.3 on Wed Jul 21 13:31:37 2004

import os

import wx

import utils
import enamer


class GetURIDialog(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: GetURIDialog.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_uri = wx.StaticText(self, -1, "Package URI:")
        self.URI = wx.TextCtrl(self, -1, "")
        self.label_template = wx.StaticText(self, -1, "Template:")
        self.combo_box_1 = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN|wx.CB_READONLY|wx.CB_SORT)
        self.label_test = wx.StaticText(self, -1, ".")
        self.static_line_1 = wx.StaticLine(self, -1)
        self.button_category = wx.Button(self, -1, "Category")
        self.text_ctrl_category = wx.TextCtrl(self, -1, "")
        self.label_pn = wx.StaticText(self, -1, "PN")
        self.text_ctrl_pn = wx.TextCtrl(self, -1, "")
        self.label_pvr = wx.StaticText(self, -1, "PVR")
        self.text_ctrl_pvr = wx.TextCtrl(self, -1, "")
        self.static_line_2 = wx.StaticLine(self, -1)
        self.button_cancel = wx.Button(self, wx.ID_CANCEL, "Cancel")
        self.button_ok = wx.Button(self, wx.ID_OK, "")
        self.button_test_p = wx.Button(self, -1, "Test Package")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT_ENTER, self.OnTestP, self.URI)
        self.Bind(wx.EVT_BUTTON, self.OnCategory, self.button_category)
        self.Bind(wx.EVT_BUTTON, self.OnTestP, self.button_test_p)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: GetURIDialog.__set_properties
        self.SetTitle("Enter URI for package")
        _icon = wx.EmptyIcon()
        _icon.CopyFromBitmap(wx.Bitmap("/usr/share/pixmaps/abeni/abeni_logo16.png", wx.BITMAP_TYPE_ANY))
        self.SetIcon(_icon)
        self.SetMinSize((598, 323))
        self.URI.SetMinSize((304, 22))
        self.combo_box_1.SetSelection(0)
        self.button_ok.SetDefault()
        self.button_test_p.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: GetURIDialog.__do_layout
        sizer_main = wx.BoxSizer(wx.VERTICAL)
        sizer_ok_cancel = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_category = wx.BoxSizer(wx.HORIZONTAL)
        sizer_template = wx.BoxSizer(wx.HORIZONTAL)
        sizer_uri = wx.BoxSizer(wx.HORIZONTAL)
        sizer_uri.Add(self.label_uri, 0, wx.LEFT, 4)
        sizer_uri.Add(self.URI, 1, wx.LEFT, 12)
        sizer_main.Add(sizer_uri, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 10)
        sizer_template.Add(self.label_template, 0, wx.LEFT|wx.ALIGN_RIGHT, 4)
        sizer_template.Add(self.combo_box_1, 1, wx.LEFT, 20)
        sizer_main.Add(sizer_template, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 10)
        sizer_main.Add(self.label_test, 0, wx.ALL|wx.ADJUST_MINSIZE, 6)
        sizer_main.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_category.Add(self.button_category, 0, wx.ADJUST_MINSIZE, 0)
        sizer_category.Add(self.text_ctrl_category, 1, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        sizer_main.Add(sizer_category, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 10)
        sizer_2.Add(self.label_pn, 0, wx.LEFT|wx.ADJUST_MINSIZE, 4)
        sizer_2.Add(self.text_ctrl_pn, 1, wx.LEFT|wx.ADJUST_MINSIZE, 18)
        sizer_main.Add(sizer_2, 1, wx.TOP|wx.BOTTOM|wx.EXPAND, 10)
        sizer_3.Add(self.label_pvr, 0, wx.LEFT|wx.ADJUST_MINSIZE, 4)
        sizer_3.Add(self.text_ctrl_pvr, 1, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        sizer_main.Add(sizer_3, 1, wx.EXPAND, 0)
        sizer_main.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_ok_cancel.Add(self.button_cancel, 0, 0, 0)
        sizer_ok_cancel.Add((20, 20), 0, 0, 0)
        sizer_ok_cancel.Add(self.button_ok, 0, 0, 0)
        sizer_ok_cancel.Add((20, 20), 0, 0, 0)
        sizer_ok_cancel.Add(self.button_test_p, 0, 0, 0)
        sizer_main.Add(sizer_ok_cancel, 0, wx.ALL|wx.EXPAND, 12)
        self.SetAutoLayout(True)
        self.SetSizer(sizer_main)
        self.Layout()
        self.Centre()
        # end wxGlade

        self.Bind(wx.EVT_TEXT_ENTER, self.OnTestP, self.text_ctrl_pvr)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnTestP, self.text_ctrl_pn)
        self.Bind(wx.EVT_KILL_FOCUS, self.OnTestP, self.text_ctrl_pvr)
        self.Bind(wx.EVT_KILL_FOCUS, self.OnTestP, self.text_ctrl_pn)
        wx.EVT_COMBOBOX(self, self.combo_box_1.GetId(), self.EvtComboBox) 
        self.template = "Minimum.ebuild"

        lines = os.listdir("/usr/share/abeni/templates/")
        for f in lines:
            bn = os.path.basename(f).replace(".ebuild", "")
            self.combo_box_1.Append(bn, f)
        self.combo_box_1.SetSelection(self.combo_box_1.FindString("Minimum"))
        self.button_ok.Enable(False)

    def OnTestP(self, event): # wxGlade: GetURIDialog.<event_handler>
        uri = self.URI.GetValue()
        if uri:
            if enamer.is_good_filename(uri):
                uri_out, pn, pv = enamer.get_components(uri)
            else:
                uri_out, my_p = enamer.get_myp(uri)
                pn, pv = enamer.guess_components(my_p)
            if pn and pv:
                self.text_ctrl_pn.SetValue(pn)
                self.text_ctrl_pvr.SetValue(pv)
            else:
                self.SetWarning("Set PN and PV")
                return 1
        else:
            self.SetWarning("Set URI")
            return 1

        if not(self.OnCatValidate()):
            self.button_ok.Enable(True)
        else:
            return 1

    def EvtComboBox(self, evt):
        cb = evt.GetEventObject()
        self.template = cb.GetClientData(cb.GetSelection())
        #self.template = evt.GetString()

    def GetTemplate(self):
        return self.template

    def OnCategory(self, event): # wxGlade: GetURIDialog.<event_handler>
        """Choose ebuild category"""
        c = utils.get_categories()
        dlg = wx.SingleChoiceDialog(self, 'Category', 'Category:',
                                   c, wx.OK|wx.CANCEL)
        opt = dlg.GetStringSelection()
        self.text_ctrl_category.SetValue(opt)
        #TODO: games can be marked stable

    def SetWarning(self, txt):
        """Set warning label"""
        self.label_test.SetLabel(txt)

    def ClearWarning(self):
        """Clear warning label"""
        self.label_test.SetLabel("Ebuild good to go!")

    def OnCatValidate(self):
        c = utils.get_categories()
        if self.text_ctrl_category.GetValue() not in c:
            self.SetWarning("Select a valid category.")
            return 1
        else:
            self.ClearWarning()

# end of class GetURIDialog
