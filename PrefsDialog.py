#!/usr/bin/env python
# generated by wxGlade 0.3.3 on Sat Jul 24 10:49:02 2004


from wxPython.wx import *
import string

from options import *

class MyDialog(wxDialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyDialog.__init__
        kwds["style"] = wxDEFAULT_DIALOG_STYLE
        wxDialog.__init__(self, *args, **kwds)
        self.notebook = wxNotebook(self, -1, style=0)
        self.noteboo_pane_emerge = wxPanel(self.notebook, -1)
        self.noteboo_pane_dev = wxPanel(self.notebook, -1)
        self.noteboo_pane_editor = wxPanel(self.notebook, -1)
        self.noteboo_pane_general = wxPanel(self.notebook, -1)
        self.notebook_ext_apps = wxPanel(self.notebook, -1)
        self.text_ctrl_userName = wxTextCtrl(self.notebook_ext_apps, -1, "")
        self.label_user = wxStaticText(self.notebook_ext_apps, -1, "Run application as this user name\n(Web browser, diff)")
        self.text_ctrl_editor = wxTextCtrl(self.notebook_ext_apps, -1, "")
        self.label_editor = wxStaticText(self.notebook_ext_apps, -1, "External editor.\nIf using gvim use the -f option.")
        self.text_ctrl_browser = wxTextCtrl(self.notebook_ext_apps, -1, "")
        self.label_browser = wxStaticText(self.notebook_ext_apps, -1, "Used for help system and\nchecking HOMEPAGE variable.")
        self.text_ctrl_diff = wxTextCtrl(self.notebook_ext_apps, -1, "")
        self.label_diff = wxStaticText(self.notebook_ext_apps, -1, "GUI diff program.\ngtkdiff, kompare etc.")
        self.text_ctrl_xterm = wxTextCtrl(self.notebook_ext_apps, -1, "")
        self.label_xterm = wxStaticText(self.notebook_ext_apps, -1, "(Konsole will open new sessions)")
        self.checkbox_strip_header = wxCheckBox(self.noteboo_pane_general, -1, "Auto-strip CVS header on save")
        self.checkbox_clear_log_window = wxCheckBox(self.noteboo_pane_general, -1, "Clear log window on new or loading ebuild")
        self.checkbox_check_syntax = wxCheckBox(self.noteboo_pane_general, -1, "Check syntax when saving")
        self.checkbox_external_control = wxCheckBox(self.noteboo_pane_general, -1, "Allow control from vim or gvim")
        self.checkbox_logfile = wxCheckBox(self.noteboo_pane_general, -1, "Log output to file")
        self.text_ctrl_logfile = wxTextCtrl(self.noteboo_pane_general, -1, "")
        self.button_font = wxButton(self.noteboo_pane_editor, -1, "Font")
        self.text_ctrl_font = wxTextCtrl(self.noteboo_pane_editor, -1, "", style=wxTE_READONLY)
        self.checkbox_highlight = wxCheckBox(self.noteboo_pane_editor, -1, "Sourcecode highlighting (color)")
        self.checkbox_gentoo_highlighting = wxCheckBox(self.noteboo_pane_editor, -1, "Highlight Gentoo keywords/functions/variables")
        self.label_dev_warning = wxStaticText(self.noteboo_pane_dev, -1, "These are only necessary for official Gentoo Developers")
        self.label_dev_user = wxStaticText(self.noteboo_pane_dev, -1, "cvs, repoman and echangelog will run as this user:")
        self.text_ctrl_devUserName = wxTextCtrl(self.noteboo_pane_dev, -1, "")
        self.label_cvs_root = wxStaticText(self.noteboo_pane_dev, -1, "Enter directory for CVS (gentoo-x86)")
        self.text_ctrl_cvs_root = wxTextCtrl(self.noteboo_pane_dev, -1, "")
        self.label_USE = wxStaticText(self.noteboo_pane_emerge, -1, "USE=")
        self.text_ctrl_USE = wxTextCtrl(self.noteboo_pane_emerge, -1, "")
        self.label_FEATURES = wxStaticText(self.noteboo_pane_emerge, -1, "FEATURES=")
        self.text_ctrl_FEATURES = wxTextCtrl(self.noteboo_pane_emerge, -1, "noauto")
        self.button_save = wxButton(self, wxID_OK, "Save")
        self.button_cancel = wxButton(self, wxID_CANCEL, "Cancel")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyDialog.__set_properties
        self.SetTitle("Preferences")
        self.Hide()
        self.text_ctrl_userName.SetSize((227, 22))
        self.text_ctrl_userName.SetFocus()
        self.text_ctrl_editor.SetSize((227, 22))
        self.text_ctrl_browser.SetSize((227, 22))
        self.text_ctrl_diff.SetSize((227, 22))
        self.text_ctrl_xterm.SetSize((227, 22))
        self.label_dev_warning.SetForegroundColour(wxColour(255, 0, 0))
        self.label_dev_warning.SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxNORMAL, 1, ""))
        self.text_ctrl_devUserName.SetSize((130, 22))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyDialog.__do_layout
        sizer_1 = wxBoxSizer(wxVERTICAL)
        sizer_2 = wxBoxSizer(wxHORIZONTAL)
        sizer_16 = wxBoxSizer(wxVERTICAL)
        sizer_18 = wxBoxSizer(wxHORIZONTAL)
        sizer_17 = wxBoxSizer(wxHORIZONTAL)
        sizer_13 = wxBoxSizer(wxVERTICAL)
        sizer_cvs = wxStaticBoxSizer(wxStaticBox(self.noteboo_pane_dev, -1, "CVS"), wxVERTICAL)
        sizer_dev_user = wxStaticBoxSizer(wxStaticBox(self.noteboo_pane_dev, -1, "User name"), wxVERTICAL)
        sizer_11 = wxBoxSizer(wxVERTICAL)
        sizer_12 = wxStaticBoxSizer(wxStaticBox(self.noteboo_pane_editor, -1, "Font"), wxHORIZONTAL)
        sizer_8 = wxBoxSizer(wxVERTICAL)
        sizer_9 = wxStaticBoxSizer(wxStaticBox(self.noteboo_pane_general, -1, "Logging"), wxVERTICAL)
        sizer_10 = wxBoxSizer(wxHORIZONTAL)
        grid_sizer_ext_apps = wxGridSizer(3, 2, 0, 0)
        sizer_xterm = wxStaticBoxSizer(wxStaticBox(self.notebook_ext_apps, -1, "xterm"), wxVERTICAL)
        sizer_diff = wxStaticBoxSizer(wxStaticBox(self.notebook_ext_apps, -1, "Graphical diff"), wxVERTICAL)
        sizer_browser = wxStaticBoxSizer(wxStaticBox(self.notebook_ext_apps, -1, "Web browser"), wxVERTICAL)
        sizer_editor = wxStaticBoxSizer(wxStaticBox(self.notebook_ext_apps, -1, "Editor"), wxVERTICAL)
        sizer_user = wxStaticBoxSizer(wxStaticBox(self.notebook_ext_apps, -1, "User name"), wxVERTICAL)
        sizer_user.Add(self.text_ctrl_userName, 0, wxALL|wxEXPAND, 4)
        sizer_user.Add(self.label_user, 0, wxALL, 0)
        grid_sizer_ext_apps.Add(sizer_user, 0, 0, 0)
        sizer_editor.Add(self.text_ctrl_editor, 0, wxALL|wxEXPAND, 4)
        sizer_editor.Add(self.label_editor, 0, 0, 12)
        grid_sizer_ext_apps.Add(sizer_editor, 0, 0, 0)
        sizer_browser.Add(self.text_ctrl_browser, 0, wxALL|wxEXPAND, 4)
        sizer_browser.Add(self.label_browser, 0, 0, 0)
        grid_sizer_ext_apps.Add(sizer_browser, 0, 0, 0)
        sizer_diff.Add(self.text_ctrl_diff, 0, wxALL|wxEXPAND, 4)
        sizer_diff.Add(self.label_diff, 0, 0, 0)
        grid_sizer_ext_apps.Add(sizer_diff, 0, 0, 0)
        sizer_xterm.Add(self.text_ctrl_xterm, 0, wxALL|wxEXPAND, 4)
        sizer_xterm.Add(self.label_xterm, 0, 0, 0)
        grid_sizer_ext_apps.Add(sizer_xterm, 0, 0, 0)
        self.notebook_ext_apps.SetAutoLayout(1)
        self.notebook_ext_apps.SetSizer(grid_sizer_ext_apps)
        grid_sizer_ext_apps.Fit(self.notebook_ext_apps)
        grid_sizer_ext_apps.SetSizeHints(self.notebook_ext_apps)
        sizer_8.Add(self.checkbox_strip_header, 0, wxALL, 8)
        sizer_8.Add(self.checkbox_clear_log_window, 0, wxALL, 8)
        sizer_8.Add(self.checkbox_check_syntax, 0, wxALL, 8)
        sizer_8.Add(self.checkbox_external_control, 0, wxALL, 8)
        sizer_10.Add(self.checkbox_logfile, 0, wxALL, 8)
        sizer_10.Add(self.text_ctrl_logfile, 1, wxALL, 8)
        sizer_9.Add(sizer_10, 1, wxEXPAND, 0)
        sizer_8.Add(sizer_9, 0, wxEXPAND, 0)
        self.noteboo_pane_general.SetAutoLayout(1)
        self.noteboo_pane_general.SetSizer(sizer_8)
        sizer_8.Fit(self.noteboo_pane_general)
        sizer_8.SetSizeHints(self.noteboo_pane_general)
        sizer_12.Add(self.button_font, 0, wxALL, 8)
        sizer_12.Add(self.text_ctrl_font, 1, wxALL, 8)
        sizer_11.Add(sizer_12, 0, wxALL|wxEXPAND, 12)
        sizer_11.Add(self.checkbox_highlight, 0, wxALL, 12)
        sizer_11.Add(self.checkbox_gentoo_highlighting, 0, wxALL, 12)
        self.noteboo_pane_editor.SetAutoLayout(1)
        self.noteboo_pane_editor.SetSizer(sizer_11)
        sizer_11.Fit(self.noteboo_pane_editor)
        sizer_11.SetSizeHints(self.noteboo_pane_editor)
        sizer_13.Add(self.label_dev_warning, 0, wxLEFT|wxTOP, 6)
        sizer_dev_user.Add(self.label_dev_user, 0, wxALL, 12)
        sizer_dev_user.Add(self.text_ctrl_devUserName, 0, wxALL, 12)
        sizer_13.Add(sizer_dev_user, 0, wxALL|wxEXPAND, 20)
        sizer_cvs.Add(self.label_cvs_root, 0, wxLEFT|wxTOP, 12)
        sizer_cvs.Add(self.text_ctrl_cvs_root, 0, wxALL|wxEXPAND, 12)
        sizer_13.Add(sizer_cvs, 0, wxALL|wxEXPAND, 20)
        self.noteboo_pane_dev.SetAutoLayout(1)
        self.noteboo_pane_dev.SetSizer(sizer_13)
        sizer_13.Fit(self.noteboo_pane_dev)
        sizer_13.SetSizeHints(self.noteboo_pane_dev)
        sizer_17.Add(self.label_USE, 0, wxALL, 12)
        sizer_17.Add(self.text_ctrl_USE, 1, wxALL, 12)
        sizer_16.Add(sizer_17, 0, wxEXPAND, 0)
        sizer_18.Add(self.label_FEATURES, 0, wxALL, 12)
        sizer_18.Add(self.text_ctrl_FEATURES, 1, wxALL, 12)
        sizer_16.Add(sizer_18, 0, wxEXPAND, 0)
        self.noteboo_pane_emerge.SetAutoLayout(1)
        self.noteboo_pane_emerge.SetSizer(sizer_16)
        sizer_16.Fit(self.noteboo_pane_emerge)
        sizer_16.SetSizeHints(self.noteboo_pane_emerge)
        self.notebook.AddPage(self.notebook_ext_apps, "External apps")
        self.notebook.AddPage(self.noteboo_pane_general, "General")
        self.notebook.AddPage(self.noteboo_pane_editor, "Editor")
        self.notebook.AddPage(self.noteboo_pane_dev, "Gentoo Developer")
        self.notebook.AddPage(self.noteboo_pane_emerge, "Emerge")
        sizer_1.Add(wxNotebookSizer(self.notebook), 1, wxALL|wxEXPAND, 4)
        sizer_2.Add(self.button_save, 0, wxLEFT, 20)
        sizer_2.Add(self.button_cancel, 0, wxLEFT, 20)
        sizer_1.Add(sizer_2, 0, wxALL|wxEXPAND, 12)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

        self.checkbox_highlight.Disable()
        self.checkbox_gentoo_highlighting.Disable()

        myOptions = Options()
        p = myOptions.Prefs()

        #ext apps
        self.text_ctrl_userName.SetValue(p['userName'])
        self.text_ctrl_browser.SetValue(p['browser'])
        self.text_ctrl_xterm.SetValue(p['xterm'])
        self.text_ctrl_diff.SetValue(p['diff'])
        self.text_ctrl_editor.SetValue(p['editor'])

        #General
        self.checkbox_strip_header.SetValue(int(p['stripHeader']))
        self.checkbox_clear_log_window.SetValue(int(p['clearLog']))
        self.checkbox_check_syntax.SetValue(int(p['checkSyntax']))
        self.checkbox_external_control.SetValue(int(p['externalControl']))
        self.checkbox_logfile.SetValue(int(p['logfile']))
        self.text_ctrl_logfile.SetValue(p['logFilename'])

        #Editor
        self.text_ctrl_font.SetValue(p['font'])
        self.checkbox_highlight.SetValue(int(p['highlighting']))
        self.checkbox_gentoo_highlighting.SetValue(int(p['gentooHighlight']))

        #gen devs
        self.text_ctrl_cvs_root.SetValue(p['cvsRoot'])
        self.text_ctrl_devUserName.SetValue(p['devUserName'])

        #portage 
        self.text_ctrl_USE.SetValue(p['use'])
        self.text_ctrl_FEATURES.SetValue(p['features'])

        EVT_BUTTON(self, self.button_font.GetId(), self.OnFont)

    def OnFont(self, evt):
        """select font"""
        data = wxFontData()
        face,size=self.text_ctrl_font.GetValue().split(',')
        size=eval(size)
        font=wxFont(size,wxDEFAULT,wxNORMAL,wxNORMAL,0,face)
        data.SetInitialFont(font)
        dialog=wxFontDialog(self,data)
        try:
            if dialog.ShowModal() == wxID_OK:
                data = dialog.GetFontData()
                font = data.GetChosenFont()
                colour = data.GetColour()
                self.text_ctrl_font.SetValue('%s,%s'%(font.GetFaceName(),font.GetPointSize()))
        finally:
            dialog.Destroy()

 

# end of class MyDialog


